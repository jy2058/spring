<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- Controller 어노테이션을 처리 -->
	<mvc:annotation-driven/>
	
	<!-- spring에서 처리하지 못하는 요청은 was(servlet-conteiner)에게 위임 -->
	<mvc:default-servlet-handler/>
	
	<!-- view resolver 설정 -->
	<!-- html 응답을 생성하는 jsp를 처리 해주는 viewResolver와 별개로 json 응답을 생성하는 viewResolver를 등록 -->
	<!-- viewResolver의 order : 우선순위 (낮을수록 우선순위가 높다 => 먼저 적용) -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0"/> <!-- 우선순위 -->
	</bean>
	
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	
	<bean id="profileImgView" class="kr.or.ddit.view.ProfileImgView"/>
	
	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<property name="order" value="1"/>
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	</bean>
	
	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath:kr/or/ddit/config/tiles/tiles.xml</value>
			</list>
		</property>
	</bean>
	
	
	
	<!-- jsp를 처리해줄 view resolver  : 후 순위-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2"/>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>


 
	<!-- @Controller 스캔 -->
	<context:annotation-config/>
	
	<!-- use-default-filters="true" 전체 어노테이션 스캔 --><!-- 전체검색 / true면 허용 -->
	<!-- 기본 패키지에서 @Conponent, @Service, @Repository와 같은 스테레오어노테이션을 제외하고(use-default-filters="false") @Controller로 표현된 클래스만 빈으로 등록하겠다.는 의미 -->
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
	
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
<!-- 		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Component"/> -->
	
	</context:component-scan>
	
	<!-- 
		spring 파일 업로드를 위한 설정
		1. multipartResolver 등록(id, name은 multipartResolver로 정의되어 있음)
		2. commons-fileupload 디펜던시 추가(pom.xml)
	 -->
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	 	<property name="maxUploadSize" value="26214400"/> <!-- 파일 5개 -->
	 	<property name="maxUploadSizePerFile" value="5242880"/>
	 </bean>
	
</beans>